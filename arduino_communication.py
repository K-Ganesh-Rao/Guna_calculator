import serial
import time

# Replace 'COM3' with your Arduino's serial port
ser = serial.Serial('COM5', 9600)
time.sleep(2)  # Wait for the serial connection to initialize
sq = [
    [0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,25,30,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,30,25,21,0,0,0,0,12,23,0,0,0,0,26,18,0,0,0,0,11,14,0,0,0,0,16,5,0,0,0,0,13,23,0,0],
    [0,0,29,25,29,0,0,0,26,13,0,0,0,0,12,25,0,0,0,0,14,11,0,0,0,0,4,16,0,0,0,0,23,11,0,0],
    [0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0],
    [0,0,17,28,0,0,0,0,25,20,21,0,0,0,22,24,0,0,0,0,0,12,0,0,0,0,18,21,0,0,0,0,11,7,0,0],
    [0,0,27,18,0,0,0,0,26,25,35,0,0,0,22,11,0,0,0,0,12,26,0,0,0,0,22,17,0,0,0,0,6,11,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,31,25,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,26,12,0,0,0,0,19,21,0,0,0,0,25,22,0,0,0,0,11,22,0,0,0,0,29,23,0,0,0,0,7,0,0,0],
    [0,0,13,0,0,0,0,0,23,10,0,0,0,0,30,25,34,0,0,0,24,10,0,0,0,0,17,21,0,0,0,0,12,9,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,29,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0],
    [15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,22,22,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,23,22,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,13,17,0,0,0,0,24,13,0,0,0,0,15,25,0,0,0,0,25,22,0,0,0,0,6,19,0,0,0,0,24,19,0,0],
    [0,0,17,13,0,0,0,0,12,26,0,0,0,0,24,12,0,0,0,0,28,25,29,0,0,0,18,5,0,0,0,0,11,25,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,21,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,25,29,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,34,0,0,0,0,0,0,0,0,0],
    [0,0,15,10,0,0,0,0,15,22,0,0,0,0,29,16,0,0,0,0,4,16,0,0,0,0,25,21,0,0,0,0,26,30,0,0],
    [0,0,5,16,0,0,0,0,20,16,0,0,0,0,17,21,0,0,0,0,18,4,0,0,0,0,29,25,0,0,0,0,30,29,0,0],
    [0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,25,0,0,0,0,0,0,0,0,0,0,25,32,32,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,23,0,0,0,0,0,0,0,0,0,0,32,25,33,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,28,0,0,0],
    [0,0,15,25,0,0,0,0,12,15,0,0,0,0,11,14,0,0,0,0,24,13,0,0,0,0,30,33,0,0,0,0,25,22,22,0],
    [0,0,25,13,0,0,0,0,7,12,0,0,0,0,15,12,0,0,0,0,12,25,0,0,0,0,33,30,0,0,0,0,28,25,33,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34],
	[31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
]



# Initialize the hx matrix
hx = [
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#1
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#2
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#3
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#4
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#5
    [0,0,0,0,0,0,0,0,0,17,0,13,15,14,0,0,0,0,0,0,0,0,0,0,16,14,16,0,0,0,0,0,0,15,0,17],#6
    [0,15,16,0,0,0,0,0,0,17,0,13,0,0,0,0,0,0,0,0,0,0,0,0,16,14,16,0,0,16,17,0,0,15,0,17],#7
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#8
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#9
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#10
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#11
    [0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#12
    [0,0,0,9,5,11,0,0,0,0,0,0,0,0,0,15,0,0,0,8,10,0,0,0,0,0,15,8,12,0,15,0,10,0,0,14],#13
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#14
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#15
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#16
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#17
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#18
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#19
    [0,0,15,0,16,0,0,0,0,0,0,9,8,0,0,0,0,0,0,0,0,10,0,0,13,0,7,0,0,0,0,0,0,0,0,0],#20
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#21
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#22
    [0,0,0,0,0,0,16,15,0,0,0,0,0,0,0,15,0,11,0,0,0,0,0,0,0,0,0,14,0,11,11,16,16,0,0,0],#23
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#24
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#25
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#26
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#27
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#28
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#29
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#30
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#31
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#32
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#33
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#34
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#35
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],#36

]

def get_matrix_value(row, col):
    if row < 0 or row >= 36 or col < 0 or col >= 36:
        raise ValueError("Row and column must be between 0 and 35 inclusive")
    
    ser.write(bytearray([row, col]))
    value = ser.read(1)
    return value[0]

try:
    row = int(input("Enter the row index (0-35): "))
    col = int(input("Enter the column index (0-35): "))
    
    A_value = get_matrix_value(row, col)
    sq_value = sq[row][col]
    hx_value = hx[row][col]

    print(f"The value from Arduino matrix at A[{row}][{col}] is {A_value}")
    print(f"The value from sq matrix at A[{row}][{col}] is {sq[row][col]}")
    print(f"The value from hx matrix at A[{row}][{col}] is {hx[row][col]}")


    if A_value >= 18:
        if sq_value == 0:
            print("Marriage Possible")
        else:
            print("Marriage not possible")
    elif A_value < 18:
        if hx_value == 0:
            print("Marriage Not Possible")
        else:
            print("Marriage Possible")
    else:
        print("sunidhi")

except ValueError as e:
    print(e)
finally:
    ser.close()
